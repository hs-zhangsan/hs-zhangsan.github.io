{"title":"977-有序数组的平方","date":"2023-01-20T09:05:15.000Z","date_formatted":{"ll":"Jan 20, 2023","L":"01/20/2023","MM-DD":"01-20"},"updated":"2023-03-31T11:45:37.374Z","content":"<p><a href=\"leetcode\"><strong>【目录】</strong></a> | <a href=\"https://leetcode.cn/problems/squares-of-a-sorted-array\" target=\"_blank\">力扣链接</a> | <a href=\"https://leetcode.cn/problems/squares-of-a-sorted-array/solution/977-by-taisui-kkyq/\" target=\"_blank\">力扣题解链接</a></p>\n<h1 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h1>\n<p>给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。</p>\n<p>示例 1： 输入：nums = [-4,-1,0,3,10] 输出：[0,1,9,16,100] 解释：平方后，数组变为 [16,1,0,9,100]，排序后，数组变为 [0,1,9,16,100]</p>\n<p>示例 2： 输入：nums = [-7,-3,2,3,11] 输出：[4,9,9,49,121]</p>\n<h1 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h1>\n<h3 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h3>\n<ul>\n<li>我们很容易想到这道题的暴力解法就是给数组每个元素平方后再进行排序，时间复杂度为O(NlogN)。</li>\n<li>然而，由于数组是有序的，即使负数平方后可能会成为最大数，但数组最大值都在数组两端，不是最左边就是最右边，因此可以考虑双指针法了，左右指针分别指向起始位置和终止位置。然后重新使用一个数组 result 用来存放结果，索引 index 指向 result 数组的终止位置。\n<ul>\n<li>若 <code>nums[left] * nums[left] &gt; nums[right] * nums[right]</code> ，<br>\n则 <code>result[index--] = nums[left] * nums[left++]</code></li>\n<li>若 <code>nums[left] * nums[left] &lt;= nums[right] * nums[right]</code> ，<br>\n则 <code>result[index--] = nums[right] * nums[right--]</code></li>\n</ul>\n</li>\n<li>思路清晰明了，想通后不难写出以下代码：</li>\n</ul>\n<h3 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Note: The returned array must be malloced, assume caller calls free().</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"type\">int</span>* <span class=\"title function_\">sortedSquares</span><span class=\"params\">(<span class=\"type\">int</span>* nums, <span class=\"type\">int</span> numsSize, <span class=\"type\">int</span>* returnSize)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>* result = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">int</span>) * numsSize);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> left = <span class=\"number\">0</span>, right = numsSize - <span class=\"number\">1</span>, index = numsSize - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt;= right) &#123; <span class=\"comment\">//判断条件也可以改成 index &gt;= 0</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[left] * nums[left] &gt; nums[right] * nums[right]) &#123;</span><br><span class=\"line\">            result[index--] = nums[left] * nums[left++];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            result[index--] = nums[right] * nums[right--];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    *returnSize = numsSize;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"复杂度分析\">复杂度分析<a title=\"#复杂度分析\" href=\"#复杂度分析\"></a></h3>\n<p>时间复杂度：O(N)</p>\n<p>空间复杂度：O(N)</p>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>想到了双指针但是想出来具体怎么写，看了一眼后也就明白了，就是忘了。</p>\n","link":"leetcode/977-有序数组的平方","comments":true,"plink":"https://hs-zhangsan.github.io/leetcode/977-有序数组的平方/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"},{"id":"总结","title":"总结","index":"3"}],"reward":true,"copyright":{"published":"January 20, 2023","updated":"March 31, 2023","author":"zhangsan","link":"<a href=\"https://hs-zhangsan.github.io/leetcode/977-有序数组的平方/\" title=\"977-有序数组的平方\">https://hs-zhangsan.github.io/leetcode/977-有序数组的平方/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
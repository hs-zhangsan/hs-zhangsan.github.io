{"title":"剑指Offer05-替换空格","date":"2023-02-04T14:01:10.000Z","date_formatted":{"ll":"Feb 4, 2023","L":"02/04/2023","MM-DD":"02-04"},"updated":"2023-03-31T11:45:37.375Z","content":"<p><a href=\"leetcode\"><strong>【目录】</strong></a> | <a href=\"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/\" target=\"_blank\">力扣链接</a> | <a href=\"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/solution/jian-zhi-offer05ti-huan-kong-ge-by-taisu-kilo/\" target=\"_blank\">力扣题解链接</a></p>\n<h1 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h1>\n<p>请实现一个函数，把字符串 s 中的每个空格替换成&quot;%20&quot;。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;We are happy.&quot;</span><br><span class=\"line\">输出：&quot;We%20are%20happy.&quot;</span><br></pre></td></tr></table></figure>\n<p>限制：</p>\n<ul>\n<li>0 &lt;= s 的长度 &lt;= 10000</li>\n</ul>\n<h1 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h1>\n<h3 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h3>\n<ul>\n<li>首先说明一点，有些语言是可以直接给已存在数组扩容的（比如 C++ 可以使用 resize() 给数组扩容），这样的话做这道题就不用再使用一个新的数组保存结果，从而将空间复杂度从 $O(n)$ 降为 $O(1)$，而 C 语言是不能直接给数组扩容的。当然这影响不大，主要是理解算法，追求极致的时间复杂度。</li>\n<li>具体地，先统计空格的数量 count，这样就确定了新数组的长度为 <code>len + 2 * count</code> 了（len 为原数组的长度，C 语言的话新数组长度还要再加一，因为 C 语言字符串结尾还有 ‘\\0’ 需要一个 char 类型的空间），然后申请新的数组。</li>\n<li>新数组申请好之后，使用双指针，让 i 和 j 分别指向原数组和新数组的开始，然后同时向后移动，在遍历原数组的过程中填充新数组，当遇到空格时将 ‘%‘、’2‘、’0‘ 三个字符分别赋值给 j 所指的元素及其后两个元素，并将 j 额外加二即可。</li>\n<li><strong>注意</strong>，若果是直接修改原数组的话，就必须从后向前填充，从前向后填充就是 $O(n^2)$ 的算法了，因为每次添加元素都要将添加元素之后的所有元素向后移动。</li>\n<li><strong>其实很多数组填充类的问题，都可以先预先给数组扩容带填充后的大小，然后在从后向前进行操作。</strong> 这么做有两个好处：\n<ol>\n<li>不用申请新数组。</li>\n<li>从后向前填充元素，避免了从前先后填充元素要来的每次添加元素都要将添加元素之后的所有元素向后移动。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>* <span class=\"title function_\">replaceSpace</span><span class=\"params\">(<span class=\"type\">char</span>* s)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> newLen = len + <span class=\"number\">2</span> * count;</span><br><span class=\"line\">    <span class=\"type\">char</span>* result = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">char</span>) * newLen + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>; i &lt; len; i++, j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s[i] == <span class=\"string\">&#x27; &#x27;</span>) &#123;</span><br><span class=\"line\">            result[j] = <span class=\"string\">&#x27;%&#x27;</span>;</span><br><span class=\"line\">            result[j + <span class=\"number\">1</span>] = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\">            result[j + <span class=\"number\">2</span>] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">            j += <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            result[j] = s[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    result[newLen] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"复杂度分析\">复杂度分析<a title=\"#复杂度分析\" href=\"#复杂度分析\"></a></h3>\n<p>时间复杂度：O(n)​</p>\n<p>空间复杂度：O(n)</p>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>直接秒了，没什么好说的。</p>\n<p>看了一下之前的题解，真的好稚嫩啊，罗里吧嗦的，也懒得再写了，直接抄过来。</p>\n","link":"leetcode/剑指Offer05-替换空格","comments":true,"plink":"https://hs-zhangsan.github.io/leetcode/剑指Offer05-替换空格/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"},{"id":"总结","title":"总结","index":"3"}],"reward":true,"copyright":{"published":"February 4, 2023","updated":"March 31, 2023","author":"zhangsan","link":"<a href=\"https://hs-zhangsan.github.io/leetcode/剑指Offer05-替换空格/\" title=\"剑指Offer05-替换空格\">https://hs-zhangsan.github.io/leetcode/剑指Offer05-替换空格/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
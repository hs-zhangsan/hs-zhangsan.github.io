{"title":"202-快乐数","date":"2023-02-01T15:19:45.000Z","date_formatted":{"ll":"Feb 1, 2023","L":"02/01/2023","MM-DD":"02-01"},"updated":"2023-03-31T11:45:37.367Z","content":"<p><a href=\"leetcode\"><strong>【目录】</strong></a> | <a href=\"https://leetcode.cn/problems/happy-number\" target=\"_blank\">力扣链接</a> | <a href=\"https://leetcode.cn/problems/happy-number/solution/202-kuai-le-shu-ha-xi-biao-by-taisui-5wnf/\" target=\"_blank\">力扣题解链接</a></p>\n<h1 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h1>\n<p>编写一个算法来判断一个数 n 是不是快乐数。</p>\n<p><strong>「快乐数」</strong> 定义为：</p>\n<ul>\n<li>\n<p>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。</p>\n</li>\n<li>\n<p>然后重复这个过程直到这个数变为 1，也可能是 <strong>无限循环</strong> 但始终变不到 1。</p>\n</li>\n<li>\n<p>如果这个过程 <strong>结果为 1</strong>，那么这个数就是快乐数。</p>\n</li>\n</ul>\n<p>如果 n 是 快乐数 就返回 true ；不是，则返回 false 。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 19</span><br><span class=\"line\">输出：true</span><br><span class=\"line\">解释：</span><br><span class=\"line\">12 + 92 = 82</span><br><span class=\"line\">82 + 22 = 68</span><br><span class=\"line\">62 + 82 = 100</span><br><span class=\"line\">12 + 02 + 02 = 1</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 2</span><br><span class=\"line\">输出：false</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= n &lt;= 231 - 1</li>\n</ul>\n<h1 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h1>\n<h3 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h3>\n<ul>\n<li>先理解题目要求，这道题的要点一共有两个：\n<ol>\n<li>做完某次计算后等于 1，<code>return true</code>，不必多说。</li>\n<li>在计算的过程中无限循环始终不变为 1，也就是说，它的计算结果 sum 会重复出现，这是本题的关键，若在循环的过程中 sum 重复出现，说明它永远不可能等于 1，<code>return false</code>。</li>\n</ol>\n</li>\n<li>理解了以上两点再来看就比较简单了，<strong>当我们遇到了要快速判断一个元素是否出现集合里的时候，就要考虑哈希法了</strong>。在本题中，使用数组作为哈希表用来存放每次计算的结果，初始数组都为 0，每次计算后将结果作为下标映射到数组元素。若对应数组元素为 0，说明此结果没得到过，将其改为 1；若为 1，说明计算结果已经重复，<code>return false</code>。</li>\n<li>那么数组的大小怎么确定呢？题目中告诉了 n 的大小最大不超过 2^31-1，即最大不超过 10 位数，也就是说，计算的结果最大不超过 9^2*10 也就是 810，再稍微大一点就行了，所以是820，这也是为什么本题能用数组的原因（我能说是因为C语言没有 set 想要用的话还得现现场手搓么哭唧唧o(TヘTo)）。</li>\n<li><strong>注意，使用数组来做哈希的题目，是因为题目都限制了数值的大小。而且如果哈希值比较少、特别分散、跨度非常大，使用数组就造成空间的极大浪费。</strong></li>\n</ul>\n<h3 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//计算的过程函数，我没重点讲，很简单看一下代码就好了</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n) &#123;</span><br><span class=\"line\">        sum += (n % <span class=\"number\">10</span>) * (n % <span class=\"number\">10</span>);</span><br><span class=\"line\">        n /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">isHappy</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> sum = getSum(n);</span><br><span class=\"line\">    <span class=\"type\">int</span> hash[<span class=\"number\">820</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (sum != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (hash[sum] == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            hash[sum]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum = getSum(sum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"复杂度分析\">复杂度分析<a title=\"#复杂度分析\" href=\"#复杂度分析\"></a></h3>\n<p>时间复杂度：O(n)</p>\n<p>空间复杂度：O(1)</p>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>昨天的题把我整自闭了，看了题解又看了视频，还去搜了一下C语言的Hash，结果都能懂，但是要拿c写set还是太麻烦了，我看到最后还是放弃了，好在发现拿数组也是可以做的，甚至效率更高，总算是把题做了，但是没写题解。</p>\n<p>今天的一看，不出意外卡子哥又用的set，emm算了不能直接摆，先看看题，emm没感觉，再看看以前的提交，欸这么简单？反过来再看看题，再看看题解，再看看之前的代码，eng！这么简单，我起了，直接秒了，有什么好说的。</p>\n<p>总之呢，我决定了，去他妈的C语言写set，以后能用数组就用数组，不能用就不做了，后面学了其他语言打不了再专项训练一下哈希表，不出意外的话我再也见不到c语言的set了。emm，map也是。。。</p>\n","link":"leetcode/202-快乐数","comments":true,"plink":"https://hs-zhangsan.github.io/leetcode/202-快乐数/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"},{"id":"总结","title":"总结","index":"3"}],"reward":true,"copyright":{"published":"February 1, 2023","updated":"March 31, 2023","author":"zhangsan","link":"<a href=\"https://hs-zhangsan.github.io/leetcode/202-快乐数/\" title=\"202-快乐数\">https://hs-zhangsan.github.io/leetcode/202-快乐数/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
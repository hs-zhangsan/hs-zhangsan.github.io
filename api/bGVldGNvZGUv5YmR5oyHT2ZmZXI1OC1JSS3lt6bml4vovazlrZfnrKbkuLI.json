{"title":"剑指Offer58-II-左旋转字符串","date":"2023-02-06T14:30:30.000Z","date_formatted":{"ll":"Feb 6, 2023","L":"02/06/2023","MM-DD":"02-06"},"updated":"2023-03-31T11:45:37.376Z","content":"<p><a href=\"leetcode\"><strong>【目录】</strong></a> | <a href=\"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/\" target=\"_blank\">力扣链接</a> | <a href=\"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/solution/jian-zhi-offer58-iizuo-xuan-zhuan-zi-fu-zmu64/\" target=\"_blank\">力扣题解链接</a></p>\n<h1 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h1>\n<p>字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串&quot;abcdefg&quot;和数字2，该函数将返回左旋转两位得到的结果&quot;cdefgab&quot;。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: s = &quot;abcdefg&quot;, k = 2</span><br><span class=\"line\">输出: &quot;cdefgab&quot;</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: s = &quot;lrloseumgh&quot;, k = 6</span><br><span class=\"line\">输出: &quot;umghlrlose&quot;</span><br></pre></td></tr></table></figure>\n<p>限制：</p>\n<ul>\n<li>1 &lt;= k &lt; s.length &lt;= 10000</li>\n</ul>\n<h1 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h1>\n<h3 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h3>\n<ul>\n<li>最直接的思路，申请一个数组然后按要求填入字符，没什么好说的这样时间复杂度 O(n)，空间复杂度 O(n)。</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>* <span class=\"title function_\">reverseLeftWords</span><span class=\"params\">(<span class=\"type\">char</span>* s, <span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    <span class=\"type\">char</span>* result = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"type\">char</span>) * len + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = n; i &lt; len; i++) &#123;</span><br><span class=\"line\">        result[count++] = s[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        result[count++] = s[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    result[count] = <span class=\"string\">&#x27;\\0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>我们来上点难度，不使用额外的数组，直接在原字符串上操作。</p>\n</li>\n<li>\n<p>之前我们在 <a href=\"https://leetcode.cn/problems/reverse-words-in-a-string/solution/151fan-zhuan-zi-fu-chuan-li-de-dan-ci-by-arjw/\" target=\"_blank\">151.反转字符串里的单词</a> 中讲过，使用 <strong>整体反转+局部反转</strong> 就可以实现「反转单词顺序」的目的。这道题也是一样的思路。</p>\n</li>\n<li>\n<p>具体步骤如下：</p>\n<ol>\n<li>反转前 n 个字符</li>\n<li>反转 n 到末尾的字符</li>\n<li>反转整个字符串</li>\n</ol>\n</li>\n<li>\n<p>这样就可以得到左旋 n 的目的，而不用申请新的字符串，完全在原字符串上操作，空间复杂度降为 O(1)。</p>\n</li>\n</ul>\n<h3 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span>* <span class=\"title function_\">reverse</span><span class=\"params\">(<span class=\"type\">char</span>* s, <span class=\"type\">int</span> start, <span class=\"type\">int</span> end)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (start &lt; end) &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> temp = s[start];</span><br><span class=\"line\">        s[start++] = s[end];</span><br><span class=\"line\">        s[end--] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">char</span>* <span class=\"title function_\">reverseLeftWords</span><span class=\"params\">(<span class=\"type\">char</span>* s, <span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">    <span class=\"comment\">//反转前 n 个字符</span></span><br><span class=\"line\">    s = reverse(s, <span class=\"number\">0</span>, n - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">//反转 k 到末尾的字符</span></span><br><span class=\"line\">    s = reverse(s, n, len - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"comment\">//反转整个字符串</span></span><br><span class=\"line\">    s = reverse(s, <span class=\"number\">0</span>, len - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>上来直接秒了，然后想着直接操作原字符串怎么做，没想出来，看了一眼题解，呵，我是傻逼。</p>\n","link":"leetcode/剑指Offer58-II-左旋转字符串","comments":true,"plink":"https://hs-zhangsan.github.io/leetcode/剑指Offer58-II-左旋转字符串/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"},{"id":"总结","title":"总结","index":"3"}],"reward":true,"copyright":{"published":"February 6, 2023","updated":"March 31, 2023","author":"zhangsan","link":"<a href=\"https://hs-zhangsan.github.io/leetcode/剑指Offer58-II-左旋转字符串/\" title=\"剑指Offer58-II-左旋转字符串\">https://hs-zhangsan.github.io/leetcode/剑指Offer58-II-左旋转字符串/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}